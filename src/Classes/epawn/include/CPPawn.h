/*
 *  CPPawn.h
 *  ePawnSDK
 *
 *  Copyright 2011 ePawn. All rights reserved.
 *
 */


#if !defined(_CPPAWN_H_)
#define _CPPAWN_H_


#include "CPDefines.h"

/**
 * A CPPawn object represents the position data generated by a CPPawnManager object.
 * This object incorporates the coordinates and orientation of the pawnâ€™s location. 
 * Coordinates (posx and posy) are expressed in pixels. The way this coordinates are translated
 * from harware values to pixels depends on the type of Arena you are using :
 *   - in screen less mode, hardware values are <i>mapped</i> to the view you have set with CPPawnManager.gameView.
 *   - if the arena come with its own screen, hardware values are converted to pixels using the <i>calibration values</i> (need to detail this).
 *
 * This class is designed to be used as is and should not be subclassed.
 *
 * @see CPPawnManagerDelegate.
 */
struct CPPawn
{
	/**
	* Identifier of the pawn (subject to modiciation in futur release of the SDK).
	* pid is an integer starting at 0.
	*/
	int		pid;
	
	/** position on the x axis (expressed in pixels) relativly to the surface. */
	int		posx;
	
	/** position on the y axis (expressed in pixels) relativly to the surface. */
	int		posy;
	
	/** orientation of the pawn, in degrees. */
	float	rotation;
};

/**
 * Alias for the CPPawn structure.
 */
typedef struct CPPawn CPPawn;


#endif // _CPPAWN_H_
